/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.19.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * This type contains information about a digital gift card line item that was purchased as a gift, and sent to the recipient by email.
 */
@Schema(description = "This type contains information about a digital gift card line item that was purchased as a gift, and sent to the recipient by email.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-03-02T10:53:33.276748+01:00[Europe/Berlin]")
public class GiftDetails {
  @SerializedName("message")
  private String message = null;

  @SerializedName("recipientEmail")
  private String recipientEmail = null;

  @SerializedName("senderName")
  private String senderName = null;

  public GiftDetails message(String message) {
    this.message = message;
    return this;
  }

   /**
   * This field contains the gift message from the buyer to the gift recipient. This field is only returned if the buyer of the gift included a message for the gift.
   * @return message
  **/
  @Schema(description = "This field contains the gift message from the buyer to the gift recipient. This field is only returned if the buyer of the gift included a message for the gift.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public GiftDetails recipientEmail(String recipientEmail) {
    this.recipientEmail = recipientEmail;
    return this;
  }

   /**
   * The email address of the gift recipient. The seller will send the digital gift card to this email address.
   * @return recipientEmail
  **/
  @Schema(description = "The email address of the gift recipient. The seller will send the digital gift card to this email address.")
  public String getRecipientEmail() {
    return recipientEmail;
  }

  public void setRecipientEmail(String recipientEmail) {
    this.recipientEmail = recipientEmail;
  }

  public GiftDetails senderName(String senderName) {
    this.senderName = senderName;
    return this;
  }

   /**
   * The name of the buyer, which will appear on the email that is sent to the gift recipient.
   * @return senderName
  **/
  @Schema(description = "The name of the buyer, which will appear on the email that is sent to the gift recipient.")
  public String getSenderName() {
    return senderName;
  }

  public void setSenderName(String senderName) {
    this.senderName = senderName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftDetails giftDetails = (GiftDetails) o;
    return Objects.equals(this.message, giftDetails.message) &&
        Objects.equals(this.recipientEmail, giftDetails.recipientEmail) &&
        Objects.equals(this.senderName, giftDetails.senderName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, recipientEmail, senderName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftDetails {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    recipientEmail: ").append(toIndentedString(recipientEmail)).append("\n");
    sb.append("    senderName: ").append(toIndentedString(senderName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
