/*
 * Fulfillment API
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.19.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SimpleAmount;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * This type is used by each payment dispute that is returned with the getPaymentDisputeSummaries method.
 */
@Schema(description = "This type is used by each payment dispute that is returned with the getPaymentDisputeSummaries method.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-03-02T10:53:33.276748+01:00[Europe/Berlin]")
public class PaymentDisputeSummary {
  @SerializedName("amount")
  private SimpleAmount amount = null;

  @SerializedName("buyerUsername")
  private String buyerUsername = null;

  @SerializedName("closedDate")
  private String closedDate = null;

  @SerializedName("openDate")
  private String openDate = null;

  @SerializedName("orderId")
  private String orderId = null;

  @SerializedName("paymentDisputeId")
  private String paymentDisputeId = null;

  @SerializedName("paymentDisputeStatus")
  private String paymentDisputeStatus = null;

  @SerializedName("reason")
  private String reason = null;

  @SerializedName("respondByDate")
  private String respondByDate = null;

  public PaymentDisputeSummary amount(SimpleAmount amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public SimpleAmount getAmount() {
    return amount;
  }

  public void setAmount(SimpleAmount amount) {
    this.amount = amount;
  }

  public PaymentDisputeSummary buyerUsername(String buyerUsername) {
    this.buyerUsername = buyerUsername;
    return this;
  }

   /**
   * This is the buyer&#x27;s eBay user ID. This field is returned for all payment disputes returned in the response.
   * @return buyerUsername
  **/
  @Schema(description = "This is the buyer's eBay user ID. This field is returned for all payment disputes returned in the response.")
  public String getBuyerUsername() {
    return buyerUsername;
  }

  public void setBuyerUsername(String buyerUsername) {
    this.buyerUsername = buyerUsername;
  }

  public PaymentDisputeSummary closedDate(String closedDate) {
    this.closedDate = closedDate;
    return this;
  }

   /**
   * The timestamp in this field shows the date/time when the payment dispute was closed, so this field is only returned for payment disputes in the CLOSED state. The timestamps returned here use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: yyyy-MM-ddThh:mm.ss.sssZ. An example would be 2019-08-04T19:09:02.768Z.
   * @return closedDate
  **/
  @Schema(description = "The timestamp in this field shows the date/time when the payment dispute was closed, so this field is only returned for payment disputes in the CLOSED state. The timestamps returned here use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: yyyy-MM-ddThh:mm.ss.sssZ. An example would be 2019-08-04T19:09:02.768Z.")
  public String getClosedDate() {
    return closedDate;
  }

  public void setClosedDate(String closedDate) {
    this.closedDate = closedDate;
  }

  public PaymentDisputeSummary openDate(String openDate) {
    this.openDate = openDate;
    return this;
  }

   /**
   * The timestamp in this field shows the date/time when the payment dispute was opened. This field is returned for payment disputes in all states. The timestamps returned here use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: yyyy-MM-ddThh:mm.ss.sssZ. An example would be 2019-08-04T19:09:02.768Z.
   * @return openDate
  **/
  @Schema(description = "The timestamp in this field shows the date/time when the payment dispute was opened. This field is returned for payment disputes in all states. The timestamps returned here use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: yyyy-MM-ddThh:mm.ss.sssZ. An example would be 2019-08-04T19:09:02.768Z.")
  public String getOpenDate() {
    return openDate;
  }

  public void setOpenDate(String openDate) {
    this.openDate = openDate;
  }

  public PaymentDisputeSummary orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * This is the unique identifier of the order involved in the payment dispute. Note: eBay rolled out a new Order ID format in June 2019. The legacy APIs still support the old and new order ID format to identify orders, but only the new order ID format is supported in REST-based APIs.
   * @return orderId
  **/
  @Schema(description = "This is the unique identifier of the order involved in the payment dispute. Note: eBay rolled out a new Order ID format in June 2019. The legacy APIs still support the old and new order ID format to identify orders, but only the new order ID format is supported in REST-based APIs.")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public PaymentDisputeSummary paymentDisputeId(String paymentDisputeId) {
    this.paymentDisputeId = paymentDisputeId;
    return this;
  }

   /**
   * This is the unique identifier of the payment dispute. This identifier is automatically created by eBay once the payment dispute comes into the eBay Managed Payments system. This identifier is passed in at the end of the getPaymentDispute call URI to retrieve a specific payment dispute. The getPaymentDispute method returns more details about a payment dispute than the getPaymentDisputeSummaries method.
   * @return paymentDisputeId
  **/
  @Schema(description = "This is the unique identifier of the payment dispute. This identifier is automatically created by eBay once the payment dispute comes into the eBay Managed Payments system. This identifier is passed in at the end of the getPaymentDispute call URI to retrieve a specific payment dispute. The getPaymentDispute method returns more details about a payment dispute than the getPaymentDisputeSummaries method.")
  public String getPaymentDisputeId() {
    return paymentDisputeId;
  }

  public void setPaymentDisputeId(String paymentDisputeId) {
    this.paymentDisputeId = paymentDisputeId;
  }

  public PaymentDisputeSummary paymentDisputeStatus(String paymentDisputeStatus) {
    this.paymentDisputeStatus = paymentDisputeStatus;
    return this;
  }

   /**
   * The enumeration value in this field gives the current status of the payment dispute. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/sell/fulfillment/types/api:DisputeStateEnum&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return paymentDisputeStatus
  **/
  @Schema(description = "The enumeration value in this field gives the current status of the payment dispute. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:DisputeStateEnum'>eBay API documentation</a>")
  public String getPaymentDisputeStatus() {
    return paymentDisputeStatus;
  }

  public void setPaymentDisputeStatus(String paymentDisputeStatus) {
    this.paymentDisputeStatus = paymentDisputeStatus;
  }

  public PaymentDisputeSummary reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * The enumeration value in this field gives the reason why the buyer initiated the payment dispute. See DisputeReasonEnum type for a description of the supported reasons that buyers can give for initiating a payment dispute. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/sell/fulfillment/types/api:DisputeReasonEnum&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return reason
  **/
  @Schema(description = "The enumeration value in this field gives the reason why the buyer initiated the payment dispute. See DisputeReasonEnum type for a description of the supported reasons that buyers can give for initiating a payment dispute. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/api:DisputeReasonEnum'>eBay API documentation</a>")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public PaymentDisputeSummary respondByDate(String respondByDate) {
    this.respondByDate = respondByDate;
    return this;
  }

   /**
   * The timestamp in this field shows the date/time when the seller must response to a payment dispute, so this field is only returned for payment disputes in the ACTION_NEEDED state. For payment disputes that require action by the seller, that same seller must call getPaymentDispute to see the next action(s) that they can take against the payment dispute. The timestamps returned here use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: yyyy-MM-ddThh:mm.ss.sssZ. An example would be 2019-08-04T19:09:02.768Z.
   * @return respondByDate
  **/
  @Schema(description = "The timestamp in this field shows the date/time when the seller must response to a payment dispute, so this field is only returned for payment disputes in the ACTION_NEEDED state. For payment disputes that require action by the seller, that same seller must call getPaymentDispute to see the next action(s) that they can take against the payment dispute. The timestamps returned here use the ISO-8601 24-hour date and time format, and the time zone used is Universal Coordinated Time (UTC), also known as Greenwich Mean Time (GMT), or Zulu. The ISO-8601 format looks like this: yyyy-MM-ddThh:mm.ss.sssZ. An example would be 2019-08-04T19:09:02.768Z.")
  public String getRespondByDate() {
    return respondByDate;
  }

  public void setRespondByDate(String respondByDate) {
    this.respondByDate = respondByDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentDisputeSummary paymentDisputeSummary = (PaymentDisputeSummary) o;
    return Objects.equals(this.amount, paymentDisputeSummary.amount) &&
        Objects.equals(this.buyerUsername, paymentDisputeSummary.buyerUsername) &&
        Objects.equals(this.closedDate, paymentDisputeSummary.closedDate) &&
        Objects.equals(this.openDate, paymentDisputeSummary.openDate) &&
        Objects.equals(this.orderId, paymentDisputeSummary.orderId) &&
        Objects.equals(this.paymentDisputeId, paymentDisputeSummary.paymentDisputeId) &&
        Objects.equals(this.paymentDisputeStatus, paymentDisputeSummary.paymentDisputeStatus) &&
        Objects.equals(this.reason, paymentDisputeSummary.reason) &&
        Objects.equals(this.respondByDate, paymentDisputeSummary.respondByDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, buyerUsername, closedDate, openDate, orderId, paymentDisputeId, paymentDisputeStatus, reason, respondByDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentDisputeSummary {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    buyerUsername: ").append(toIndentedString(buyerUsername)).append("\n");
    sb.append("    closedDate: ").append(toIndentedString(closedDate)).append("\n");
    sb.append("    openDate: ").append(toIndentedString(openDate)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    paymentDisputeId: ").append(toIndentedString(paymentDisputeId)).append("\n");
    sb.append("    paymentDisputeStatus: ").append(toIndentedString(paymentDisputeStatus)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    respondByDate: ").append(toIndentedString(respondByDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
