/*
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.metas.camel.externalsystems.amazon.api.model.orders;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.metas.camel.externalsystems.amazon.api.model.orders.Order;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * A list of orders along with additional information to make subsequent API calls.
 */
@ApiModel(description = "A list of orders along with additional information to make subsequent API calls.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-19T18:02:29.893848+02:00[Europe/Berlin]")
public class OrdersList {
  public static final String SERIALIZED_NAME_ORDERS = "Orders";
  @SerializedName(SERIALIZED_NAME_ORDERS)
  private List<Order> orders = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BEFORE = "LastUpdatedBefore";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BEFORE)
  private String lastUpdatedBefore;

  public static final String SERIALIZED_NAME_CREATED_BEFORE = "CreatedBefore";
  @SerializedName(SERIALIZED_NAME_CREATED_BEFORE)
  private String createdBefore;


  public OrdersList orders(List<Order> orders) {
    
    this.orders = orders;
    return this;
  }

  public OrdersList addOrdersItem(Order ordersItem) {
    this.orders.add(ordersItem);
    return this;
  }

   /**
   * A list of orders.
   * @return orders
  **/
  @ApiModelProperty(required = true, value = "A list of orders.")

  public List<Order> getOrders() {
    return orders;
  }


  public void setOrders(List<Order> orders) {
    this.orders = orders;
  }


  public OrdersList nextToken(String nextToken) {
    
    this.nextToken = nextToken;
    return this;
  }

   /**
   * When present and not empty, pass this string token in the next request to return the next response page.
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When present and not empty, pass this string token in the next request to return the next response page.")

  public String getNextToken() {
    return nextToken;
  }


  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public OrdersList lastUpdatedBefore(String lastUpdatedBefore) {
    
    this.lastUpdatedBefore = lastUpdatedBefore;
    return this;
  }

   /**
   * A date used for selecting orders that were last updated before (or at) a specified time. An update is defined as any change in order status, including the creation of a new order. Includes updates made by Amazon and by the seller. All dates must be in ISO 8601 format.
   * @return lastUpdatedBefore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A date used for selecting orders that were last updated before (or at) a specified time. An update is defined as any change in order status, including the creation of a new order. Includes updates made by Amazon and by the seller. All dates must be in ISO 8601 format.")

  public String getLastUpdatedBefore() {
    return lastUpdatedBefore;
  }


  public void setLastUpdatedBefore(String lastUpdatedBefore) {
    this.lastUpdatedBefore = lastUpdatedBefore;
  }


  public OrdersList createdBefore(String createdBefore) {
    
    this.createdBefore = createdBefore;
    return this;
  }

   /**
   * A date used for selecting orders created before (or at) a specified time. Only orders placed before the specified time are returned. The date must be in ISO 8601 format.
   * @return createdBefore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A date used for selecting orders created before (or at) a specified time. Only orders placed before the specified time are returned. The date must be in ISO 8601 format.")

  public String getCreatedBefore() {
    return createdBefore;
  }


  public void setCreatedBefore(String createdBefore) {
    this.createdBefore = createdBefore;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrdersList ordersList = (OrdersList) o;
    return Objects.equals(this.orders, ordersList.orders) &&
        Objects.equals(this.nextToken, ordersList.nextToken) &&
        Objects.equals(this.lastUpdatedBefore, ordersList.lastUpdatedBefore) &&
        Objects.equals(this.createdBefore, ordersList.createdBefore);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orders, nextToken, lastUpdatedBefore, createdBefore);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrdersList {\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    lastUpdatedBefore: ").append(toIndentedString(lastUpdatedBefore)).append("\n");
    sb.append("    createdBefore: ").append(toIndentedString(createdBefore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

