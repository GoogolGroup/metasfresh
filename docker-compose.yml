# docker-compose.yml file
version: '3.2'

services:

  nginx:
    image: nginx:1.16.0-alpine
    ports:
      - "8088:80"

  db:
    image: metasfresh/metasfresh-db:5.174
    ports:
      - "15432:5432"
    environment:
      - METASFRESH_USERNAME=metasfresh
      - METASFRESH_PASSWORD=metasfresh
      - METASFRESH_DBNAME=metasfresh
      - DB_SYSPASS=System
      - POSTGRES_PASSWORD=ip2LmNzXX8p8iXg9lZTWEJ9524kQDbXFudB7LR03T-xK9fLweX3TLMkA2AYcEiaS
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    image: rabbitmq:3.9.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=metasfresh
      - RABBITMQ_DEFAULT_PASS=metasfresh
      - RABBITMQ_DEFAULT_VHOST=/
    deploy:
      mode: replicated
      replicas: 1

  search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - LOG4J_FORMAT_MSG_NO_LOOKUPS=true
      - "ES_JAVA_OPTS=-Xms128M -Xmx256m"
    deploy:
      mode: replicated
      replicas: 1

  webapi:
    image: my-api:latest
    ports:
      - "8080:8080"
      - "8789:8789"
    environment:
      - "SPRING_DATA_ELASTICSEARCH_CLIENT_REACTIVE_ENDPOINTS=search:9200"
    deploy:
      mode: replicated
      replicas: 1

  app:
    image: my-app:latest
    ports:
      - "8282:8282"
      - "61616:61616"
      - "8788:8788"
    deploy:
      mode: replicated
      replicas: 0

  webui:
    image: yarn-frontend:latest
    ports:
      - "80:80"
      - "443:443"
    deploy:
      mode: replicated
      replicas: 0

volumes: {}
configs: {}
secrets: {}
